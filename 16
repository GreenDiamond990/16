using UnityEngine;

namespace Assignment18
{
       public struct Position
    {
        public float X, Y, Z;

       
        public Position(float x, float y, float z)
        {
            X = x;
            Y = y;
            Z = z;
        }

                public void PrintPosition()
        {
            Debug.Log($"Position: X = {X}, Y = {Y}, Z = {Z}");
        }
    }

    
    public class Character
    {
        public string Name;
        private int health;
        protected Position position;

      
        public int Health
        {
            get => health;
            set => health = Mathf.Clamp(value, 0, 100);
        }

              public Character(string name, int health, Position position)
        {
            Name = name;
            Health = health;
            this.position = position;
        }

               public Character() : this("No name", 100, new Position(0, 0, 0)) { }

       
        public virtual void DisplayInfo()
        {
            Debug.Log($"Name: {Name}, Health: {Health}");
            position.PrintPosition();
        }

       
        public void Attack(int damage, Character target)
        {
            target.Health -= damage;
            Debug.Log($"{Name} attacked {target.Name} for {damage} damage!");
        }
    }

    
    public class Soldier : Character
    {
     
        public Soldier(string name, int health, Position position) : base(name, health, position) { }

        public Soldier() : base() { }

       
        public override void DisplayInfo()
        {
            Debug.Log("Soldier");
            base.DisplayInfo();
        }
    }

    public class Officer : Character
    {
       
        public Officer(string name, int health, Position position) : base(name, health, position) { }

       
        public override void DisplayInfo()
        {
            Debug.Log("Officer");
            base.DisplayInfo();
        }
    }

   
    public class CharacterTest : MonoBehaviour
    {
        void Start()
        {
           
            Character soldier = new Soldier();
            Character officer = new Officer("Captain", 80, new Position(10, 20, 30));

            
            Character[] characters = { soldier, officer };

           
            foreach (Character character in characters)
            {
                character.DisplayInfo();
            }

           
            Debug.Log($"Soldier's Health before attack: {soldier.Health}");
            officer.Attack(20, soldier);
            Debug.Log($"Soldier's Health after attack: {soldier.Health}");
        }
    }
}
